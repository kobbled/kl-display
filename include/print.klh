%ifndef print_h
%define print_h

%include namespace.m

%define prog_name printlib
%define prog_name_alias print

declare_function(prog_name,posreg_line,prog_name_alias,posrgl)
ROUTINE printlib__posreg_line(reg_no : INTEGER ; grp_no : INTEGER) FROM printlib
declare_function(prog_name,posreg,prog_name_alias,posrg)
ROUTINE printlib__posreg(reg_no : INTEGER ; grp_no : INTEGER) FROM printlib
declare_function(prog_name,numreg_line,prog_name_alias,numrgl)
ROUTINE printlib__numreg_line(reg_no : INTEGER) FROM printlib
declare_function(prog_name,numreg,prog_name_alias,numrg)
ROUTINE printlib__numreg(reg_no : INTEGER) FROM printlib
declare_function(prog_name,io_line,prog_name_alias,iol)
ROUTINE printlib__io_line(typ : STRING; reg_no : INTEGER) FROM printlib
declare_function(prog_name,io,prog_name_alias,io)
ROUTINE printlib__io(typ : STRING; reg_no : INTEGER) FROM printlib
--logging TP wrapper
declare_function(prog_name,init_log,prog_name_alias,intlg)
ROUTINE printlib__init_log(showdebug : INTEGER; showinfo : INTEGER) FROM printlib
declare_function(prog_name,drop_log,prog_name_alias,drplg)
ROUTINE printlib__drop_log FROM printlib
declare_function(prog_name,log_open,prog_name_alias,lgopn)
ROUTINE printlib__log_open FROM printlib
declare_function(prog_name,log_close,prog_name_alias,lgcls)
ROUTINE printlib__log_close FROM printlib
declare_function(prog_name,log_string,prog_name_alias,strlg)
ROUTINE printlib__log_string(msg_typ : INTEGER; s : STRING) FROM printlib
declare_function(prog_name,log_numreg,prog_name_alias,nrlg)
ROUTINE printlib__log_numreg(msg_typ : INTEGER; reg_no : INTEGER) FROM printlib
declare_function(prog_name,log_posreg,prog_name_alias,prlg)
ROUTINE printlib__log_posreg(msg_typ : INTEGER; reg_no : INTEGER ; grp_no : INTEGER) FROM printlib
declare_function(prog_name,log_io,prog_name_alias,iolg)
ROUTINE printlib__log_io(msg_typ : INTEGER; typ : STRING; reg_no : INTEGER) FROM printlib
%endif --print_h